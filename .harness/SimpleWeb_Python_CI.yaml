pipeline:
  name: SimpleWeb_Python_CI
  identifier: SimpleWeb_Python_CI
  projectIdentifier: DemoTx
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: account.Github_OAuth_1702454216196
        repoName: simple-web-backend
        build: <+input>
  stages:
    - stage:
        name: Build_and_artifact
        identifier: Build_and_artifact
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          caching:
            enabled: true
            override: false
            paths: []
          buildIntelligence:
            enabled: false
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Docker
            spec: {}
          execution:
            steps:
              - step:
                  type: Run
                  name: infraStatus
                  identifier: test_connection
                  spec:
                    shell: Sh
                    command: echo "pipeline started"
              - stepGroup:
                  name: SAST
                  identifier: SAST
                  steps:
                    - step:
                        type: Semgrep
                        name: Semgrep
                        identifier: Semgrep
                        spec:
                          mode: orchestration
                          config: default
                          target:
                            type: repository
                            workspace: .
                            detection: auto
                          advanced:
                            log:
                              level: info
                            fail_on_severity: critical
                          settings:
                            SEMGREP_APP_TOKEN: <+secrets.getValue("project.SEMGREP_APP_TOKEN")>
                          auth:
                            access_token: <+secrets.getValue("project.SEMGREP_APP_TOKEN")>
                        timeout: 10m
                    - step:
                        type: Bandit
                        name: Bandit
                        identifier: Bandit
                        spec:
                          mode: orchestration
                          config: default
                          target:
                            type: repository
                            workspace: .
                            detection: auto
                          advanced:
                            log:
                              level: info
                            fail_on_severity: critical
                      contextType: Pipeline
              - step:
                  type: BuildAndPushDockerRegistry
                  name: BuildAndPushDockerRegistry
                  identifier: BuildAndPushDockerRegistry
                  spec:
                    connectorRef: Gurpreetdockerhub
                    repo: gurpreetghs/simple_python_be
                    tags:
                      - $<+pipeline.sequenceId>
                    caching: true
              - stepGroup:
                  name: SCA
                  identifier: SCA
                  steps:
                    - step:
                        type: AquaTrivy
                        name: AquaTrivy
                        identifier: AquaTrivy
                        spec:
                          mode: orchestration
                          config: default
                          target:
                            type: container
                            detection: auto
                          advanced:
                            log:
                              level: info
                            fail_on_severity: critical
                          privileged: true
                          image:
                            type: docker_v2
                            tag: <+pipeline.sequenceId>
                            name: gurpreetghs/simple_python_be
                            domain: hub.docker.com
                    - step:
                        type: Grype
                        name: Grype
                        identifier: Grype
                        spec:
                          mode: orchestration
                          config: default
                          target:
                            type: container
                            detection: auto
                          advanced:
                            log:
                              level: info
                            fail_on_severity: critical
                          privileged: true
                          image:
                            type: docker_v2
                            tag: <+pipeline.sequenceId>
                            name: gurpreetghs/simple_python_be
        delegateSelectors:
          - aws-delegate
  description: python CI flask Backend Build Pipeline
  variables:
    - name: DATABASE_URL
      type: String
      description: posgresql url
      required: false
      value: <+input>
    - name: JWT_SECRET_KEY
      type: String
      description: ""
      required: false
      value: <+input>
    - name: pin
      type: String
      description: ""
      required: false
      value: "2312"
